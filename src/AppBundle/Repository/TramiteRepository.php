<?php

namespace AppBundle\Repository;

/**
 * TramiteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TramiteRepository extends \Doctrine\ORM\EntityRepository
{
    public function findTramites($id = null)
    {
        $query = $this->getEntityManager();

        if ($id) {
            $result = $query
                ->createQuery('SELECT t FROM AppBundle:Tramite t JOIN t.trabajador w WHERE w.id=:id AND t.isCompletado=FALSE ORDER BY t.fechaEntrada DESC')
                ->setParameter('id', $id)
                ->getResult();
        } else {
            $result = $query
                ->createQuery('SELECT t FROM AppBundle:Tramite t JOIN t.trabajador w WHERE t.isCompletado=FALSE ORDER BY t.fechaEntrada DESC ')
                ->getResult();
        }

        return $result;
    }

    public function findTramitesBaja($id = null)
    {
        $query = $this->getEntityManager();

        if ($id) {
            $result = $query
                ->createQuery('SELECT t FROM AppBundle:Tramite t JOIN t.trabajador w WHERE w.id=:id AND t.isCompletado=TRUE ORDER BY t.fechaEntrada DESC')
                ->setParameter('id', $id)
                ->getResult();
        } else {
            $result = $query
                ->createQuery('SELECT t FROM AppBundle:Tramite t JOIN t.trabajador w WHERE t.isCompletado=TRUE ORDER BY t.fechaEntrada DESC ')
                ->getResult();
        }

        return $result;
    }

    public function findClienteTramites($idCliente, $idAbogado = null)
    {
        $query = $this->getEntityManager();

        if ($idAbogado) {
            $result = $query
                ->createQuery('SELECT t FROM AppBundle:Tramite t JOIN t.cliente c JOIN t.trabajador w WHERE c.id=:idCliente AND w.id=:idAbogado ORDER BY t.fechaEntrada DESC')
                ->setParameters(['idCliente' => $idCliente, 'idAbogado' => $idAbogado])
                ->getResult();
        } else {
            $result = $query
                ->createQuery('SELECT t FROM AppBundle:Tramite t JOIN t.cliente c JOIN t.trabajador w WHERE c.id=:idCliente ORDER BY t.fechaEntrada DESC')
                ->setParameter('idCliente', $idCliente)
                ->getResult();
        }

        return $result;
    }

    public function reporteXTramiteTermino()
    {
        $today = date_format(new \DateTime('now'), 'Y/m/d');
        $si = $this->getEntityManager()
            ->createQuery('SELECT COUNT(t) FROM AppBundle:Tramite t WHERE t.fechaVencimiento >= :today AND t.isCompletado=FALSE')
            ->setParameter('today', $today)
            ->getSingleScalarResult();
        $no = $this->getEntityManager()
            ->createQuery('SELECT COUNT(t) FROM AppBundle:Tramite t WHERE t.fechaVencimiento < :today AND t.isCompletado=FALSE')
            ->setParameter('today', $today)
            ->getSingleScalarResult();
        $end = $this->getEntityManager()
            ->createQuery('SELECT COUNT(t) FROM AppBundle:Tramite t WHERE t.isCompletado=TRUE')
            ->getSingleScalarResult();

        return [$si, $no, $end];
    }

    public function reporteXTramiteIniMes()
    {
        return $this->getEntityManager()
            ->createQuery('SELECT t, COUNT(t) FROM AppBundle:Tramite t WHERE t.isCompletado=FALSE GROUP BY t.fechaEntrada')
            ->getResult();
    }

    public function reporteXTramiteVenMes()
    {
        return $this->getEntityManager()
            ->createQuery('SELECT t, COUNT(t) FROM AppBundle:Tramite t WHERE t.isCompletado=FALSE GROUP BY t.fechaVencimiento')
            ->getResult();
    }

    public function reporteXTramiteEndMes()
    {
        return $this->getEntityManager()
            ->createQuery('SELECT t, COUNT(t) FROM AppBundle:Tramite t WHERE t.isCompletado=TRUE GROUP BY t.fechaVencimiento')
            ->getResult();
    }

    public function DynamicReport($column, $search, $string, $complete)
    {
        $dql = 'SELECT t FROM AppBundle:Tramite t JOIN t.cliente c JOIN t.trabajador w';

        if ($column == 'carnet' || $column == 'nombre' || $column == 'apellidos' || $column == 'direccion') {
            $table = 'c';
        }else if ($column == 'descripcion' || $column == 'fechaEntrada' || $column == 'fechaVencimiento') {
            $table = 't';
        }else {
            $table = 'w';
        }
        if ($column == 'fechaEntrada' || $column == 'fechaVencimiento') {
            $string = date_format(date_create_from_format('d/m/Y', $string), 'Y-m-d');
        }

        if ($string != '') {
            if ($search == '1') {
                if ($column == 'abogado') {
                    $dql .= " WITH " . $table . ".nombre LIKE '%" . $string . "%' OR " . $table . ".apellidos LIKE '%" . $string . "%'";
                } else {
                    $dql .= " WITH " . $table . "." . $column . " LIKE '%" . $string . "%'";
                }
            } else if ($search == '2') {
                if ($column == 'abogado') {
                    $dql .= " WITH " . $table . ".nombre LIKE '" . $string . "%' OR " . $table . ".apellidos LIKE '" . $string . "%'";
                } else {
                    $dql .= " WITH " . $table . "." . $column . " LIKE '" . $string . "%'";
                }
            } else if ($search == '3') {
                if ($column == 'abogado') {
                    $dql .= " WHERE " . $table . ".nombre='" . $string . "' OR " . $table . ".apellidos='" . $string . "'";
                } else {
                    $dql .= " WHERE " . $table . "." . $column . "='" . $string . "'";
                }
            } else {
                if ($column == 'abogado') {
                    $dql .= " WITH " . $table . ".nombre LIKE '" . $string . "%' OR " . $table . ".apellidos LIKE '%" . $string . "'";
                } else {
                    $dql .= " WITH " . $table . "." . $column . " LIKE '%" . $string . "'";
                }
            }
        }

        if ($complete && $search == '3' && $string != '') {
            $dql .= ' AND t.isCompletado=TRUE';
        } else if ($complete && $string == '') {
            $dql .= ' WHERE t.isCompletado=TRUE';
        }

        return $this->getEntityManager()
            ->createQuery($dql)
            ->getResult();
    }
}
